# configs/docker-compose.yml

version: '3.8'

services:
  db:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-argo_db}
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../db/schema.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - floatchat-net

  chroma:
    image: chromadb/chroma:latest
    container_name: chroma_db
    ports:
      - "8000:8000"
    volumes:
      - chroma_data:/chroma/.chroma/index
    networks:
      - floatchat-net

  api:
    build:
      context: ..
      dockerfile: configs/Dockerfile.api
    container_name: floatchat_api
    depends_on:
      - db
      - chroma
    ports:
      - "8001:8000" # Expose API on host port 8001, container port 8000
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-argo_db}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY} # Pass the Google API key from your environment
    networks:
      - floatchat-net
    command: ["uvicorn", "services.api.rag:app", "--host", "0.0.0.0", "--port", "8000"]


  frontend:
    build:
      context: ..
      dockerfile: configs/Dockerfile.frontend
    container_name: floatchat_frontend
    depends_on:
      - api
    ports:
      - "8501:8501"
    networks:
      - floatchat-net
    command: ["streamlit", "run", "services/frontend/app.py", "--server.port=8501", "--server.address=0.0.0.0"]

volumes:
  postgres_data:
  chroma_data:

networks:
  floatchat-net:
    driver: bridge
